#set($elements = $property.variables.newVariable("Elements"))
#set($elementType = $property.elementType.qualifiedSourceName)
#set($valueType = $property.valueType.qualifiedSourceName)
#set($collectionImplementation = $TypeUtils.collectionImplementationFor($property.type.qualifiedSourceName))
#newConcreteTypes()
#set($nodeValue = $property.variables.newVariable("NodeValue"))
    Node $nodeValue = element.selectNode("$property.pathOrName");
    List<Element> $elements = filterElements(${nodeValue}.selectNodes("entry"));
    $value = new $collectionImplementation<$elementType, $valueType>();

#if ($property.converter)
#createConverter()
#set($keyConverter = $converter)
#end
#if ($property.valueConverter)
#set($valueConverter = $property.variables.newVariable("Converter"))
    $property.valueConverter $valueConverter = GWT.create(${property.valueConverter}.class);
#else
#set($valueConverter = false)
#end

    for (Element mapElement : $elements)
    {
        $elementType key = null;
        $valueType value = null;
        {
            $elementType currentValue = null;
            Element currentElement = (Element)mapElement.selectNode("key");
            if (currentElement != null && currentElement.hasChildren())
            {
#set($converter = $keyConverter)
#parse($property.templates.elementType)
            }
            key = currentValue;
        }
        {
            $valueType currentValue = null;
            Element currentElement = (Element)mapElement.selectNode("value");
            if (currentElement != null && currentElement.hasChildren())
            {
#set($converter = $valueConverter)
#parse($property.templates.valueType)
            }
            value = currentValue;
        }
        ${value}.put(key, value);
    }
